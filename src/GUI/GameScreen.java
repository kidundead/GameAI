/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.model.HandGUI;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author lucas
 */
public class GameScreen extends javax.swing.JFrame {

    private javax.swing.JScrollPane jScrollMensages;
    private javax.swing.JTextArea jTextMesage;
    private JPanel mensageBoard;

    /**
     * Creates new form Tabuleiro
     */
    public GameScreen() {
        initComponents();

        mensageBoard = new JPanel(new BorderLayout());
        mensageBoard.setPreferredSize(new java.awt.Dimension(240, 300));
        jTextMesage = new javax.swing.JTextArea();
        //jTextMesage.setPreferredSize(new java.awt.Dimension(240, 300));
        jTextMesage.setEditable(false);
        jScrollMensages = new javax.swing.JScrollPane(jTextMesage);
        mensageBoard.add(jScrollMensages, BorderLayout.CENTER);
        //jScrollMensagens.setMinimumSize(new java.awt.Dimension(240, 30000));
        //jScrollMensagens.setPreferredSize(new java.awt.Dimension(240, 300));
        /*jScrollMensagens.setPreferredSize(new Dimension(900, 200));
         jScrollMensagens.setMinimumSize(new Dimension(900, 200));
         jTextMesage.setMaximumSize(new Dimension(90, 30000));*/
        java.awt.GridBagConstraints gridBagConstraints;
        gridBagConstraints = new java.awt.GridBagConstraints();

        
        javax.swing.Box.Filler filler = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        JPanel mensagePanel = new JPanel();
        mensagePanel.add(filler);
        mensagePanel.add(mensageBoard);
        
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        getContentPane().add(mensagePanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();

        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;

        gridBagConstraints.fill = GridBagConstraints.BOTH;

        getContentPane().add(Board.getInstance(), gridBagConstraints);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        StackLeft = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo de Domin√≥");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(6);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 2, 0};
        getContentPane().setLayout(layout);

        StackLeft.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        StackLeft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StackLeft.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        getContentPane().add(StackLeft, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addHumanPlayer(HandGUI human) {
        java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(human, gridBagConstraints);
        //add((JPanel) human);       
    }

    public void addAIPlayers(List<HandGUI> players) {
        JPanel aiPanel;

        JLabel label;
        java.awt.GridBagConstraints gridBagConstraints;

        aiPanel = new JPanel(new java.awt.GridBagLayout());
        aiPanel.setMinimumSize(new Dimension(10, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        label = new JLabel(new StringBuilder("SmartAI ").append(1).toString());
        label.setFont(new java.awt.Font("Arial", 1, 18));
        aiPanel.add(label, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        aiPanel.add(players.get(0), gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(aiPanel, gridBagConstraints);
        //add((JPanel) players.get(0));

        if (players.size() > 1) {
            aiPanel = new JPanel(new java.awt.GridBagLayout());
            aiPanel.setMinimumSize(new Dimension(300, 90));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            label = new JLabel(new StringBuilder("DumbAI ").append(2).toString());
            label.setFont(new java.awt.Font("Arial", 1, 18));
            aiPanel.add(label, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            aiPanel.add(players.get(1), gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            getContentPane().add(aiPanel, gridBagConstraints);
            //add((JPanel) players.get(1));
        }
        if (players.size() > 2) {
            aiPanel = new JPanel(new java.awt.GridBagLayout());
            aiPanel.setMinimumSize(new Dimension(300, 90));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            label = new JLabel(new StringBuilder("DumbAI ").append(3).toString());
            label.setFont(new java.awt.Font("Arial", 1, 18));
            aiPanel.add(label, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            aiPanel.add(players.get(2), gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            getContentPane().add(aiPanel, gridBagConstraints);
            //add((JPanel) players.get(2));
        }

        pack();
    }

    public void addAIPlayer(HandGUI player, String name, int id) {
        JPanel aiPanel;

        JLabel label;
        java.awt.GridBagConstraints gridBagConstraints;
        label = new JLabel(new StringBuilder(name).append(id + 1).toString());
        label.setFont(new java.awt.Font("Arial", 1, 18));

        aiPanel = new JPanel(new java.awt.GridBagLayout());
        aiPanel.setMinimumSize(new Dimension(10, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        aiPanel.add(label, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        aiPanel.add(player, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();

        switch (id) {
            case 0:
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 0;
                break;
            case 1:
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                break;
            case 2:
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 1;
                break;
            default:
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 2;

        }

        getContentPane().add(aiPanel, gridBagConstraints);
    }

    public void setMesage(String mesage) {
        String update = Integer.toString(id++) + ": " + mesage + "\n" + jTextMesage.getText();
        jTextMesage.setText(update);
    }

    public void setStack(int left) {
        StackLeft.setText(new StringBuilder("Faltam ").append(left).append(" na pilha").toString());
    }

    private int id = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StackLeft;
    // End of variables declaration//GEN-END:variables
}
