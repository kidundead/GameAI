package GUI.Hand;

import GUI.model.Domino;
import game.logic.interfaces.Player;
import game.logic.interfaces.Hand;
import java.util.ArrayList;
import model.Piece;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lucas
 */
public class HandPlayer extends GUI.model.HandGUI implements Player {

    /**
     * Creates new form HandPlayer
     */
    public HandPlayer(Hand<Piece> hand) {
        super(hand);

        pieceToDomino(false);

        for (Domino domino : dominos) {
            add(domino);
        }
    }

    @Override
    public void addDomino(Piece piece) {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void takeFromStack() {
        Piece piece = mediator.takeStack();
        hand.add(piece);
        addDomino(piece);
    }

    @Override
    public Piece putOnBoard() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void doMove() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Hand<Piece> showHand() {
        return hand;
    }
}
